syntax = "proto3";

package notify;

option go_package = "./notify;notifyv1";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Notify {
  rpc SendMessage (SendMessageReq) returns (SendMessageResp){
    option (google.api.http) = {
      post: "/v1/send_message"
      body: "*"
    };
  }
}

enum NotifyType {
  moderate = 0;
  significant = 1;
  alert = 2;
}

message MailNotify {
  string subject = 1 [(validate.rules).string.min_len = 1];
  string body = 2 [(validate.rules).string.min_len = 1];
}

message PhoneNotify {
  string body = 1 [(validate.rules).string.min_len = 1];
}

message Channels {
  optional MailNotify mail = 1;
  optional PhoneNotify phone = 2;
}

message SendMessageReq {
  string userID = 1 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9_-]+$"}];
  NotifyType notifyType = 2 [(validate.rules).enum = {}];
  Channels channels = 3 [(validate.rules).message.required = true];
}

message SendMessageResp {
  string respond = 1;
}

service Users {
  rpc AddUser (AddUserReq) returns (AddUserResp) {
    option (google.api.http) = {
      post: "/v1/add_user"
      body: "*"
    };
  }
  rpc EditPreferences (EditPreferencesReq) returns (EditPreferencesResp) {
    option (google.api.http) = {
      put: "/v1/edit_preferences"
      body: "*"
    };
  }
}

message Preferences {
  optional MailApproval mail = 1;
  optional PhoneApproval phone = 2;
}

message AddUserReq {
  string username = 1 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9_-]+$"}];
  string email = 2 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"}];
  string phone = 3 [(validate.rules).string = {min_len: 1, pattern: "^[+]?[0-9]+$"}];
  string password = 4 [(validate.rules).string = {min_len: 8, pattern: "^[a-zA-Z0-9_-]+$"}];
  optional Preferences preferences = 5;
}

message AddUserResp {
  string id = 1;
  string username = 2;
  string email = 3;
  string phone = 4;
  google.protobuf.Timestamp createdAt = 5;
}

message MailApproval {
  bool approval = 1;
}

message PhoneApproval {
  bool approval = 1;
}

message EditPreferencesReq {
  string userID = 1 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9_-]+$"}];
  Preferences preferences = 2 [(validate.rules).message.required = true];
}

message EditPreferencesResp {
  string respond = 1;
}