syntax = "proto3";

package notify;

option go_package = "./notify;notifyv1";

import "validate/validate.proto";
import "google/api/annotations.proto";

service Notify {
  rpc SendMessage (SendMessageReq) returns (SendMessageResp){
    option (google.api.http) = {
      post: "/v1/send_message"
      body: "*"
    };
  }
}

enum NotifyType {
  moderate = 0;
  significant = 1;
  alert = 2;
}

message MailNotify {
  string subject = 1 [(validate.rules).string.min_len = 1];
  string body = 2 [(validate.rules).string.min_len = 1];
}

message PhoneNotify {
  string body = 1 [(validate.rules).string.min_len = 1];
}

message Channels {
  optional MailNotify mail = 1;
  optional PhoneNotify phone = 2;
}

message SendMessageReq {
  string userID = 1 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9_-]+$"}];
  NotifyType notifyType = 2 [(validate.rules).enum = {}];
  Channels channels = 3 [(validate.rules).message.required = true];
}

message SendMessageResp {
  string respond = 1;
}

service Users {
  rpc EditPreferences (EditPreferencesReq) returns (EditPreferencesResp) {
    option (google.api.http) = {
      post: "/v1/edit_preferences"
      body: "*"
    };
  }
}

message MailApproval {
  bool approval = 1;
}

message PhoneApproval {
  bool approval = 1;
}

message Preferences {
  optional MailApproval mail = 1;
  optional PhoneApproval phone = 2;
}

message EditPreferencesReq {
  string userID = 1 [(validate.rules).string = {min_len: 1, pattern: "^[a-zA-Z0-9_-]+$"}];
  Preferences preferences = 2 [(validate.rules).message.required = true];
}

message EditPreferencesResp {
  string respond = 1;
}