syntax = "proto3";

package notify;

option go_package = "notify.v1;notifyv1";

// The SendNotify service provides methods for sending notifications
service SendNotify {
  rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
}

enum NotifyType {
  moderate = 0;
  significant = 1;
  alert = 2;
}

message MailNotify {
  string subject = 1;
  string body = 2;
}

message PhoneNotify {
  string body = 1;
}

message Channels {
  MailNotify mail = 1;
  PhoneNotify phone = 2;
}

// The SendMessageRequest message contains the information necessary to send the notification
message SendMessageRequest {
  string userId = 1;
  NotifyType notifyType = 2;
  Channels channels = 3;
}

// The SendMessageResponse message contains information about the result of sending the notification
message SendMessageResponse{
  string respond = 1;
}

// The Users service provides methods for working with user preferences
service Users {
 rpc UserPreferences (UserPreferencesRequest) returns (UserPreferencesResponse);
}

message MailApproval {
  bool approval = 1;
}

message PhoneApproval {
  bool approval = 1;
}

message Preferences {
  MailApproval mail = 1;
  PhoneApproval phone = 2;
}

// The UserPreferencesRequest message contains information about the user's preferences
message UserPreferencesRequest {
  string userId = 1;
  Preferences preferences = 2;
}

// The UserPreferencesResponse message contains information about the result of changing the user's preferences
message UserPreferencesResponse {
  string respond = 1;
}