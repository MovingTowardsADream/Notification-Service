// Code generated by MockGen. DO NOT EDIT.
// Source: worker.go

// Package mocks is a generated GoMock package.
package mocks

import (
	dto "Notification_Service/internal/interfaces/dto"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSenderMail is a mock of SenderMail interface.
type MockSenderMail struct {
	ctrl     *gomock.Controller
	recorder *MockSenderMailMockRecorder
}

// MockSenderMailMockRecorder is the mock recorder for MockSenderMail.
type MockSenderMailMockRecorder struct {
	mock *MockSenderMail
}

// NewMockSenderMail creates a new mock instance.
func NewMockSenderMail(ctrl *gomock.Controller) *MockSenderMail {
	mock := &MockSenderMail{ctrl: ctrl}
	mock.recorder = &MockSenderMailMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSenderMail) EXPECT() *MockSenderMailMockRecorder {
	return m.recorder
}

// SendMailLetter mocks base method.
func (m *MockSenderMail) SendMailLetter(ctx context.Context, notify dto.MailDate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMailLetter", ctx, notify)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMailLetter indicates an expected call of SendMailLetter.
func (mr *MockSenderMailMockRecorder) SendMailLetter(ctx, notify interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMailLetter", reflect.TypeOf((*MockSenderMail)(nil).SendMailLetter), ctx, notify)
}

// MockSenderPhone is a mock of SenderPhone interface.
type MockSenderPhone struct {
	ctrl     *gomock.Controller
	recorder *MockSenderPhoneMockRecorder
}

// MockSenderPhoneMockRecorder is the mock recorder for MockSenderPhone.
type MockSenderPhoneMockRecorder struct {
	mock *MockSenderPhone
}

// NewMockSenderPhone creates a new mock instance.
func NewMockSenderPhone(ctrl *gomock.Controller) *MockSenderPhone {
	mock := &MockSenderPhone{ctrl: ctrl}
	mock.recorder = &MockSenderPhoneMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSenderPhone) EXPECT() *MockSenderPhoneMockRecorder {
	return m.recorder
}

// SendPhoneSMS mocks base method.
func (m *MockSenderPhone) SendPhoneSMS(ctx context.Context, notify dto.PhoneDate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendPhoneSMS", ctx, notify)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendPhoneSMS indicates an expected call of SendPhoneSMS.
func (mr *MockSenderPhoneMockRecorder) SendPhoneSMS(ctx, notify interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendPhoneSMS", reflect.TypeOf((*MockSenderPhone)(nil).SendPhoneSMS), ctx, notify)
}
